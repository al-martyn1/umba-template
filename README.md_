---
Title: Шаблон Umba-проекта
---

Для подключения и использования необходимых библиотек их нужно раскомментировать в файлах:

 - `_libs/_clone_libs.bat`
 - `_libs/_git-job-impl.bat`


# Настройка проекта на базе данного шаблона 

## Настройка CMakeLists.txt

### Название проекта

В начале файла находим строку описания проекта (с директивой `project`):

#!insert{noLineNo,noKeepCutTags,filename,no-path} CMakeLists.txt#`project(umba-template`-(1)

Заменяем название `umba-template` на название проекта.



### Настройка библиотек

Импортируем нужные библиотеки:

#!insert{noLineNo,noKeepCutTags,filename,no-path} CMakeLists.txt#`# Import libraries here`-(1)


Настраиваем списки библиотек для последующего использования:

#!insert{noLineNo,noKeepCutTags,filename,no-path} CMakeLists.txt#`# Configure libraries here`-(1)

При настройке целей можно как использовать заранее подготовленные списки библиотек, так и указывать библиотеки непосредственно.


### Добавление целей

Настраиваем цель (исполняемый файл) проекта:

#!insert{noLineNo,noKeepCutTags,filename,no-path} CMakeLists.txt#`add_executable(umba-template`-(1)

При необходимости дополнительные цели можно добавлять аналогично.


## Настройка запуска MSVC

Для открытия проекта в MSVC нужно настроить название "солюшена":

#!insert{noLineNo,noKeepCutTags,filename,no-path} set_sln.bat#`@set SLN`-(1)

Это название должно совпадать с тем, что указано в директиве `project` файла `CMakeLists.txt`.



# Сборка и отладка проекта


## Извлечение библиотек

Для сборки проекта требуются внешнте библиотеки. Внешние библиотеки не подгружаются автоматически.
Для их подгрузки требуется выполнить скрипт `_libs/_clone_libs.bat`.


## Генерация сборочных скриптов и сборка

Для генерации сборочных скриптов и их сборки при помощи `MSBuild` предназначены файлы:

 - `.bat/build_all_msvc2019.bat`
 - `.bat/build_all_msvc2022.bat`
 - `.bat/cmake_generate_msvc2019.bat`
 - `.bat/cmake_generate_msvc2022.bat`


## Открытие проекта в IDE

### Запуск VSCode

Для запуска VSCode предназначен файл `_start_code.bat`. 
VSCode с плагином "CMake Tools" сам обнаружит `CMakeLists.txt`. Следует выбрать подходящий тулчейн
и можно начинать работу.


### Запуск MSVC

Для запуска MSVC предназначен файл `_start_msvc.bat`.
По умолчанию будет сгенерированна и открыта в 2019ой студии конфигурация `x86`.
Для того, чтобы открывалась другая студия с другой конфигурацией, следует
переименовать файл `setup_msvc.bat.example` в `setup_msvc.bat` и настроить нужную конфигурацию там.


